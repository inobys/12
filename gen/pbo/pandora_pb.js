// source: pandora.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pandora.Act_info', null, global);
goog.exportSymbol('proto.pandora.ApplicationBrokerRequest', null, global);
goog.exportSymbol('proto.pandora.BrokerBody', null, global);
goog.exportSymbol('proto.pandora.BrokerHead', null, global);
goog.exportSymbol('proto.pandora.BrokerMessage', null, global);
goog.exportSymbol('proto.pandora.BrokerRequest', null, global);
goog.exportSymbol('proto.pandora.BrokerResponse', null, global);
goog.exportSymbol('proto.pandora.Empty', null, global);
goog.exportSymbol('proto.pandora.GVoiceAppInfo', null, global);
goog.exportSymbol('proto.pandora.GVoiceMode', null, global);
goog.exportSymbol('proto.pandora.GVoiceResponse', null, global);
goog.exportSymbol('proto.pandora.GVoiceRoomSetting', null, global);
goog.exportSymbol('proto.pandora.GVoiceServerInfo', null, global);
goog.exportSymbol('proto.pandora.GVoiceTeamRoomInfo', null, global);
goog.exportSymbol('proto.pandora.GlobalEvent', null, global);
goog.exportSymbol('proto.pandora.JsonRequest', null, global);
goog.exportSymbol('proto.pandora.Online_msg_info', null, global);
goog.exportSymbol('proto.pandora.ProtoRequest', null, global);
goog.exportSymbol('proto.pandora.ReportActivityErrorInfo', null, global);
goog.exportSymbol('proto.pandora.Request', null, global);
goog.exportSymbol('proto.pandora.Response', null, global);
goog.exportSymbol('proto.pandora.ShareMiniAppToQQRequest', null, global);
goog.exportSymbol('proto.pandora.ShareMiniAppToWXRequest', null, global);
goog.exportSymbol('proto.pandora.SharePhotoToQQRequest', null, global);
goog.exportSymbol('proto.pandora.SharePhotoToWXRequest', null, global);
goog.exportSymbol('proto.pandora.ShareStructMsgToQQGameFriendRequest', null, global);
goog.exportSymbol('proto.pandora.ShareStructMsgToQQRequest', null, global);
goog.exportSymbol('proto.pandora.ShareStructMsgToWXRequest', null, global);
goog.exportSymbol('proto.pandora.ShareUrlToWXRequest', null, global);
goog.exportSymbol('proto.pandora.UserData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.UserData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.UserData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.UserData.displayName = 'proto.pandora.UserData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.Request.displayName = 'proto.pandora.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.Response.displayName = 'proto.pandora.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.Empty.displayName = 'proto.pandora.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.JsonRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.JsonRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.JsonRequest.displayName = 'proto.pandora.JsonRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.GlobalEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.GlobalEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.GlobalEvent.displayName = 'proto.pandora.GlobalEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.ProtoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.ProtoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.ProtoRequest.displayName = 'proto.pandora.ProtoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.ShareStructMsgToWXRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.ShareStructMsgToWXRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.ShareStructMsgToWXRequest.displayName = 'proto.pandora.ShareStructMsgToWXRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.ShareStructMsgToQQRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.ShareStructMsgToQQRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.ShareStructMsgToQQRequest.displayName = 'proto.pandora.ShareStructMsgToQQRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.SharePhotoToWXRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.SharePhotoToWXRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.SharePhotoToWXRequest.displayName = 'proto.pandora.SharePhotoToWXRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.SharePhotoToQQRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.SharePhotoToQQRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.SharePhotoToQQRequest.displayName = 'proto.pandora.SharePhotoToQQRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.ShareStructMsgToQQGameFriendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.ShareStructMsgToQQGameFriendRequest.displayName = 'proto.pandora.ShareStructMsgToQQGameFriendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.ShareUrlToWXRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.ShareUrlToWXRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.ShareUrlToWXRequest.displayName = 'proto.pandora.ShareUrlToWXRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.ShareMiniAppToWXRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.ShareMiniAppToWXRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.ShareMiniAppToWXRequest.displayName = 'proto.pandora.ShareMiniAppToWXRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.ShareMiniAppToQQRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.ShareMiniAppToQQRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.ShareMiniAppToQQRequest.displayName = 'proto.pandora.ShareMiniAppToQQRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.BrokerHead = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.BrokerHead, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.BrokerHead.displayName = 'proto.pandora.BrokerHead';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.Act_info = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.Act_info, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.Act_info.displayName = 'proto.pandora.Act_info';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.Online_msg_info = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pandora.Online_msg_info.repeatedFields_, null);
};
goog.inherits(proto.pandora.Online_msg_info, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.Online_msg_info.displayName = 'proto.pandora.Online_msg_info';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.BrokerBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.BrokerBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.BrokerBody.displayName = 'proto.pandora.BrokerBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.BrokerMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.BrokerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.BrokerMessage.displayName = 'proto.pandora.BrokerMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.BrokerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.BrokerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.BrokerRequest.displayName = 'proto.pandora.BrokerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.ApplicationBrokerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.ApplicationBrokerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.ApplicationBrokerRequest.displayName = 'proto.pandora.ApplicationBrokerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.BrokerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.BrokerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.BrokerResponse.displayName = 'proto.pandora.BrokerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.ReportActivityErrorInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.ReportActivityErrorInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.ReportActivityErrorInfo.displayName = 'proto.pandora.ReportActivityErrorInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.GVoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.GVoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.GVoiceResponse.displayName = 'proto.pandora.GVoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.GVoiceAppInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.GVoiceAppInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.GVoiceAppInfo.displayName = 'proto.pandora.GVoiceAppInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.GVoiceServerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.GVoiceServerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.GVoiceServerInfo.displayName = 'proto.pandora.GVoiceServerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.GVoiceMode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.GVoiceMode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.GVoiceMode.displayName = 'proto.pandora.GVoiceMode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.GVoiceTeamRoomInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.GVoiceTeamRoomInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.GVoiceTeamRoomInfo.displayName = 'proto.pandora.GVoiceTeamRoomInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pandora.GVoiceRoomSetting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pandora.GVoiceRoomSetting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pandora.GVoiceRoomSetting.displayName = 'proto.pandora.GVoiceRoomSetting';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.UserData.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.UserData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.UserData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.UserData.toObject = function(includeInstance, msg) {
  var f, obj = {
    roleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    openId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    serviceType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    acountType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    area: jspb.Message.getFieldWithDefault(msg, 5, ""),
    partition: jspb.Message.getFieldWithDefault(msg, 6, ""),
    appId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    accessToken: jspb.Message.getFieldWithDefault(msg, 8, ""),
    payToken: jspb.Message.getFieldWithDefault(msg, 9, ""),
    gameVer: jspb.Message.getFieldWithDefault(msg, 10, ""),
    platId: jspb.Message.getFieldWithDefault(msg, 11, ""),
    gameName: jspb.Message.getFieldWithDefault(msg, 12, ""),
    msdkGameId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    sdkVersion: jspb.Message.getFieldWithDefault(msg, 14, ""),
    level: jspb.Message.getFieldWithDefault(msg, 15, ""),
    vender: jspb.Message.getFieldWithDefault(msg, 16, ""),
    os: jspb.Message.getFieldWithDefault(msg, 17, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.UserData}
 */
proto.pandora.UserData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.UserData;
  return proto.pandora.UserData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.UserData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.UserData}
 */
proto.pandora.UserData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoleId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcountType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setArea(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartition(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessToken(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayToken(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameVer(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsdkGameId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdkVersion(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setVender(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setOs(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.UserData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.UserData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.UserData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.UserData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpenId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getServiceType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAcountType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getArea();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPartition();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAppId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccessToken();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPayToken();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getGameVer();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPlatId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getGameName();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMsdkGameId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getSdkVersion();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getVender();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getOs();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string role_id = 1;
 * @return {string}
 */
proto.pandora.UserData.prototype.getRoleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string open_id = 2;
 * @return {string}
 */
proto.pandora.UserData.prototype.getOpenId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setOpenId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string service_type = 3;
 * @return {string}
 */
proto.pandora.UserData.prototype.getServiceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setServiceType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string acount_type = 4;
 * @return {string}
 */
proto.pandora.UserData.prototype.getAcountType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setAcountType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string area = 5;
 * @return {string}
 */
proto.pandora.UserData.prototype.getArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setArea = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string partition = 6;
 * @return {string}
 */
proto.pandora.UserData.prototype.getPartition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setPartition = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string app_id = 7;
 * @return {string}
 */
proto.pandora.UserData.prototype.getAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string access_token = 8;
 * @return {string}
 */
proto.pandora.UserData.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setAccessToken = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string pay_token = 9;
 * @return {string}
 */
proto.pandora.UserData.prototype.getPayToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setPayToken = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string game_ver = 10;
 * @return {string}
 */
proto.pandora.UserData.prototype.getGameVer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setGameVer = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string plat_id = 11;
 * @return {string}
 */
proto.pandora.UserData.prototype.getPlatId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setPlatId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string game_name = 12;
 * @return {string}
 */
proto.pandora.UserData.prototype.getGameName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setGameName = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string msdk_game_id = 13;
 * @return {string}
 */
proto.pandora.UserData.prototype.getMsdkGameId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setMsdkGameId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string sdk_version = 14;
 * @return {string}
 */
proto.pandora.UserData.prototype.getSdkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setSdkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string level = 15;
 * @return {string}
 */
proto.pandora.UserData.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string vender = 16;
 * @return {string}
 */
proto.pandora.UserData.prototype.getVender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setVender = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string os = 17;
 * @return {string}
 */
proto.pandora.UserData.prototype.getOs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setOs = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string channel_id = 18;
 * @return {string}
 */
proto.pandora.UserData.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.UserData} returns this
 */
proto.pandora.UserData.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of UserData as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.UserData.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.roleId;

  /** @type {?|undefined} */
  this.openId;

  /** @type {?|undefined} */
  this.serviceType;

  /** @type {?|undefined} */
  this.acountType;

  /** @type {?|undefined} */
  this.area;

  /** @type {?|undefined} */
  this.partition;

  /** @type {?|undefined} */
  this.appId;

  /** @type {?|undefined} */
  this.accessToken;

  /** @type {?|undefined} */
  this.payToken;

  /** @type {?|undefined} */
  this.gameVer;

  /** @type {?|undefined} */
  this.platId;

  /** @type {?|undefined} */
  this.gameName;

  /** @type {?|undefined} */
  this.msdkGameId;

  /** @type {?|undefined} */
  this.sdkVersion;

  /** @type {?|undefined} */
  this.level;

  /** @type {?|undefined} */
  this.vender;

  /** @type {?|undefined} */
  this.os;

  /** @type {?|undefined} */
  this.channelId;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.UserData.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.UserData}
 */
proto.pandora.UserData.fromObject = function(obj) {
  var msg = new proto.pandora.UserData();
  obj.roleId != null && jspb.Message.setField(msg, 1, obj.roleId);
  obj.openId != null && jspb.Message.setField(msg, 2, obj.openId);
  obj.serviceType != null && jspb.Message.setField(msg, 3, obj.serviceType);
  obj.acountType != null && jspb.Message.setField(msg, 4, obj.acountType);
  obj.area != null && jspb.Message.setField(msg, 5, obj.area);
  obj.partition != null && jspb.Message.setField(msg, 6, obj.partition);
  obj.appId != null && jspb.Message.setField(msg, 7, obj.appId);
  obj.accessToken != null && jspb.Message.setField(msg, 8, obj.accessToken);
  obj.payToken != null && jspb.Message.setField(msg, 9, obj.payToken);
  obj.gameVer != null && jspb.Message.setField(msg, 10, obj.gameVer);
  obj.platId != null && jspb.Message.setField(msg, 11, obj.platId);
  obj.gameName != null && jspb.Message.setField(msg, 12, obj.gameName);
  obj.msdkGameId != null && jspb.Message.setField(msg, 13, obj.msdkGameId);
  obj.sdkVersion != null && jspb.Message.setField(msg, 14, obj.sdkVersion);
  obj.level != null && jspb.Message.setField(msg, 15, obj.level);
  obj.vender != null && jspb.Message.setField(msg, 16, obj.vender);
  obj.os != null && jspb.Message.setField(msg, 17, obj.os);
  obj.channelId != null && jspb.Message.setField(msg, 18, obj.channelId);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Request.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.Request}
 */
proto.pandora.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.Request;
  return proto.pandora.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.Request}
 */
proto.pandora.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Request as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.Request.ObjectFormat = function() {
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.Request.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.Request}
 */
proto.pandora.Request.fromObject = function(obj) {
  var msg = new proto.pandora.Request();
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.Response}
 */
proto.pandora.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.Response;
  return proto.pandora.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.Response}
 */
proto.pandora.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 ret = 1;
 * @return {number}
 */
proto.pandora.Response.prototype.getRet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.Response} returns this
 */
proto.pandora.Response.prototype.setRet = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.pandora.Response.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Response} returns this
 */
proto.pandora.Response.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Response as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.Response.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.ret;

  /** @type {?|undefined} */
  this.message;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.Response.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.Response}
 */
proto.pandora.Response.fromObject = function(obj) {
  var msg = new proto.pandora.Response();
  obj.ret != null && jspb.Message.setField(msg, 1, obj.ret);
  obj.message != null && jspb.Message.setField(msg, 2, obj.message);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.Empty}
 */
proto.pandora.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.Empty;
  return proto.pandora.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.Empty}
 */
proto.pandora.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Empty as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.Empty.ObjectFormat = function() {
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.Empty.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.Empty}
 */
proto.pandora.Empty.fromObject = function(obj) {
  var msg = new proto.pandora.Empty();
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.JsonRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.JsonRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.JsonRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.JsonRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.JsonRequest}
 */
proto.pandora.JsonRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.JsonRequest;
  return proto.pandora.JsonRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.JsonRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.JsonRequest}
 */
proto.pandora.JsonRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommandId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.JsonRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.JsonRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.JsonRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.JsonRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 command_id = 1;
 * @return {number}
 */
proto.pandora.JsonRequest.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.JsonRequest} returns this
 */
proto.pandora.JsonRequest.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.pandora.JsonRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.JsonRequest} returns this
 */
proto.pandora.JsonRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of JsonRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.JsonRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.commandId;

  /** @type {?|undefined} */
  this.message;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.JsonRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.JsonRequest}
 */
proto.pandora.JsonRequest.fromObject = function(obj) {
  var msg = new proto.pandora.JsonRequest();
  obj.commandId != null && jspb.Message.setField(msg, 1, obj.commandId);
  obj.message != null && jspb.Message.setField(msg, 2, obj.message);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.GlobalEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.GlobalEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.GlobalEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GlobalEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: jspb.Message.getFieldWithDefault(msg, 2, ""),
    extend: jspb.Message.getFieldWithDefault(msg, 3, ""),
    count: jspb.Message.getFieldWithDefault(msg, 4, 0),
    roomName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    member: jspb.Message.getFieldWithDefault(msg, 6, 0),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.GlobalEvent}
 */
proto.pandora.GlobalEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.GlobalEvent;
  return proto.pandora.GlobalEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.GlobalEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.GlobalEvent}
 */
proto.pandora.GlobalEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtend(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomName(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMember(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.GlobalEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.GlobalEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.GlobalEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GlobalEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExtend();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRoomName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMember();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.pandora.GlobalEvent.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GlobalEvent} returns this
 */
proto.pandora.GlobalEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.pandora.GlobalEvent.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GlobalEvent} returns this
 */
proto.pandora.GlobalEvent.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string extend = 3;
 * @return {string}
 */
proto.pandora.GlobalEvent.prototype.getExtend = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GlobalEvent} returns this
 */
proto.pandora.GlobalEvent.prototype.setExtend = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 count = 4;
 * @return {number}
 */
proto.pandora.GlobalEvent.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.GlobalEvent} returns this
 */
proto.pandora.GlobalEvent.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string room_name = 5;
 * @return {string}
 */
proto.pandora.GlobalEvent.prototype.getRoomName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GlobalEvent} returns this
 */
proto.pandora.GlobalEvent.prototype.setRoomName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 member = 6;
 * @return {number}
 */
proto.pandora.GlobalEvent.prototype.getMember = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.GlobalEvent} returns this
 */
proto.pandora.GlobalEvent.prototype.setMember = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 status = 7;
 * @return {number}
 */
proto.pandora.GlobalEvent.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.GlobalEvent} returns this
 */
proto.pandora.GlobalEvent.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GlobalEvent as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.GlobalEvent.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.content;

  /** @type {?|undefined} */
  this.extend;

  /** @type {?|undefined} */
  this.count;

  /** @type {?|undefined} */
  this.roomName;

  /** @type {?|undefined} */
  this.member;

  /** @type {?|undefined} */
  this.status;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.GlobalEvent.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.GlobalEvent}
 */
proto.pandora.GlobalEvent.fromObject = function(obj) {
  var msg = new proto.pandora.GlobalEvent();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.content != null && jspb.Message.setField(msg, 2, obj.content);
  obj.extend != null && jspb.Message.setField(msg, 3, obj.extend);
  obj.count != null && jspb.Message.setField(msg, 4, obj.count);
  obj.roomName != null && jspb.Message.setField(msg, 5, obj.roomName);
  obj.member != null && jspb.Message.setField(msg, 6, obj.member);
  obj.status != null && jspb.Message.setField(msg, 7, obj.status);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.ProtoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.ProtoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.ProtoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ProtoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, ""),
    activityName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    info: jspb.Message.getFieldWithDefault(msg, 3, ""),
    param1: jspb.Message.getFieldWithDefault(msg, 4, ""),
    param2: jspb.Message.getFieldWithDefault(msg, 5, ""),
    openIds: jspb.Message.getFieldWithDefault(msg, 6, ""),
    source: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.ProtoRequest}
 */
proto.pandora.ProtoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.ProtoRequest;
  return proto.pandora.ProtoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.ProtoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.ProtoRequest}
 */
proto.pandora.ProtoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivityName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setParam1(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setParam2(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenIds(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.ProtoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.ProtoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.ProtoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ProtoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActivityName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParam1();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getParam2();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOpenIds();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.pandora.ProtoRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ProtoRequest} returns this
 */
proto.pandora.ProtoRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string activity_name = 2;
 * @return {string}
 */
proto.pandora.ProtoRequest.prototype.getActivityName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ProtoRequest} returns this
 */
proto.pandora.ProtoRequest.prototype.setActivityName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string info = 3;
 * @return {string}
 */
proto.pandora.ProtoRequest.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ProtoRequest} returns this
 */
proto.pandora.ProtoRequest.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string param1 = 4;
 * @return {string}
 */
proto.pandora.ProtoRequest.prototype.getParam1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ProtoRequest} returns this
 */
proto.pandora.ProtoRequest.prototype.setParam1 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string param2 = 5;
 * @return {string}
 */
proto.pandora.ProtoRequest.prototype.getParam2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ProtoRequest} returns this
 */
proto.pandora.ProtoRequest.prototype.setParam2 = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string open_ids = 6;
 * @return {string}
 */
proto.pandora.ProtoRequest.prototype.getOpenIds = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ProtoRequest} returns this
 */
proto.pandora.ProtoRequest.prototype.setOpenIds = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string source = 7;
 * @return {string}
 */
proto.pandora.ProtoRequest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ProtoRequest} returns this
 */
proto.pandora.ProtoRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ProtoRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.ProtoRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.content;

  /** @type {?|undefined} */
  this.activityName;

  /** @type {?|undefined} */
  this.info;

  /** @type {?|undefined} */
  this.param1;

  /** @type {?|undefined} */
  this.param2;

  /** @type {?|undefined} */
  this.openIds;

  /** @type {?|undefined} */
  this.source;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.ProtoRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.ProtoRequest}
 */
proto.pandora.ProtoRequest.fromObject = function(obj) {
  var msg = new proto.pandora.ProtoRequest();
  obj.content != null && jspb.Message.setField(msg, 1, obj.content);
  obj.activityName != null && jspb.Message.setField(msg, 2, obj.activityName);
  obj.info != null && jspb.Message.setField(msg, 3, obj.info);
  obj.param1 != null && jspb.Message.setField(msg, 4, obj.param1);
  obj.param2 != null && jspb.Message.setField(msg, 5, obj.param2);
  obj.openIds != null && jspb.Message.setField(msg, 6, obj.openIds);
  obj.source != null && jspb.Message.setField(msg, 7, obj.source);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.ShareStructMsgToWXRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.ShareStructMsgToWXRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareStructMsgToWXRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mediaTagName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    targetUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    messageExt: jspb.Message.getFieldWithDefault(msg, 7, ""),
    userOpenId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.ShareStructMsgToWXRequest}
 */
proto.pandora.ShareStructMsgToWXRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.ShareStructMsgToWXRequest;
  return proto.pandora.ShareStructMsgToWXRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.ShareStructMsgToWXRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.ShareStructMsgToWXRequest}
 */
proto.pandora.ShareStructMsgToWXRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaTagName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageExt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserOpenId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.ShareStructMsgToWXRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.ShareStructMsgToWXRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareStructMsgToWXRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMediaTagName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTargetUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMessageExt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserOpenId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToWXRequest} returns this
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToWXRequest} returns this
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string desc = 3;
 * @return {string}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToWXRequest} returns this
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string media_tag_name = 4;
 * @return {string}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.getMediaTagName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToWXRequest} returns this
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.setMediaTagName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string target_url = 5;
 * @return {string}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.getTargetUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToWXRequest} returns this
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.setTargetUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string img_url = 6;
 * @return {string}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToWXRequest} returns this
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string message_ext = 7;
 * @return {string}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.getMessageExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToWXRequest} returns this
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.setMessageExt = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string user_open_id = 8;
 * @return {string}
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.getUserOpenId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToWXRequest} returns this
 */
proto.pandora.ShareStructMsgToWXRequest.prototype.setUserOpenId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ShareStructMsgToWXRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.ShareStructMsgToWXRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.title;

  /** @type {?|undefined} */
  this.desc;

  /** @type {?|undefined} */
  this.mediaTagName;

  /** @type {?|undefined} */
  this.targetUrl;

  /** @type {?|undefined} */
  this.imgUrl;

  /** @type {?|undefined} */
  this.messageExt;

  /** @type {?|undefined} */
  this.userOpenId;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.ShareStructMsgToWXRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.ShareStructMsgToWXRequest}
 */
proto.pandora.ShareStructMsgToWXRequest.fromObject = function(obj) {
  var msg = new proto.pandora.ShareStructMsgToWXRequest();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.title != null && jspb.Message.setField(msg, 2, obj.title);
  obj.desc != null && jspb.Message.setField(msg, 3, obj.desc);
  obj.mediaTagName != null && jspb.Message.setField(msg, 4, obj.mediaTagName);
  obj.targetUrl != null && jspb.Message.setField(msg, 5, obj.targetUrl);
  obj.imgUrl != null && jspb.Message.setField(msg, 6, obj.imgUrl);
  obj.messageExt != null && jspb.Message.setField(msg, 7, obj.messageExt);
  obj.userOpenId != null && jspb.Message.setField(msg, 8, obj.userOpenId);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.ShareStructMsgToQQRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.ShareStructMsgToQQRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareStructMsgToQQRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scene: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 4, ""),
    targetUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.ShareStructMsgToQQRequest}
 */
proto.pandora.ShareStructMsgToQQRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.ShareStructMsgToQQRequest;
  return proto.pandora.ShareStructMsgToQQRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.ShareStructMsgToQQRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.ShareStructMsgToQQRequest}
 */
proto.pandora.ShareStructMsgToQQRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScene(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.ShareStructMsgToQQRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.ShareStructMsgToQQRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareStructMsgToQQRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScene();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTargetUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQRequest} returns this
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scene = 2;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.getScene = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQRequest} returns this
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.setScene = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQRequest} returns this
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string desc = 4;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQRequest} returns this
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string target_url = 5;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.getTargetUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQRequest} returns this
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.setTargetUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string img_url = 6;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQRequest} returns this
 */
proto.pandora.ShareStructMsgToQQRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ShareStructMsgToQQRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.ShareStructMsgToQQRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.scene;

  /** @type {?|undefined} */
  this.title;

  /** @type {?|undefined} */
  this.desc;

  /** @type {?|undefined} */
  this.targetUrl;

  /** @type {?|undefined} */
  this.imgUrl;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.ShareStructMsgToQQRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.ShareStructMsgToQQRequest}
 */
proto.pandora.ShareStructMsgToQQRequest.fromObject = function(obj) {
  var msg = new proto.pandora.ShareStructMsgToQQRequest();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.scene != null && jspb.Message.setField(msg, 2, obj.scene);
  obj.title != null && jspb.Message.setField(msg, 3, obj.title);
  obj.desc != null && jspb.Message.setField(msg, 4, obj.desc);
  obj.targetUrl != null && jspb.Message.setField(msg, 5, obj.targetUrl);
  obj.imgUrl != null && jspb.Message.setField(msg, 6, obj.imgUrl);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.SharePhotoToWXRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.SharePhotoToWXRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.SharePhotoToWXRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.SharePhotoToWXRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scene: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mediaTagName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    messageExt: jspb.Message.getFieldWithDefault(msg, 4, ""),
    messageAction: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gameObjectPath: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.SharePhotoToWXRequest}
 */
proto.pandora.SharePhotoToWXRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.SharePhotoToWXRequest;
  return proto.pandora.SharePhotoToWXRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.SharePhotoToWXRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.SharePhotoToWXRequest}
 */
proto.pandora.SharePhotoToWXRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScene(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaTagName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageExt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageAction(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameObjectPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.SharePhotoToWXRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.SharePhotoToWXRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.SharePhotoToWXRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.SharePhotoToWXRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScene();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMediaTagName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessageExt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessageAction();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGameObjectPath();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.pandora.SharePhotoToWXRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.SharePhotoToWXRequest} returns this
 */
proto.pandora.SharePhotoToWXRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scene = 2;
 * @return {string}
 */
proto.pandora.SharePhotoToWXRequest.prototype.getScene = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.SharePhotoToWXRequest} returns this
 */
proto.pandora.SharePhotoToWXRequest.prototype.setScene = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string media_tag_name = 3;
 * @return {string}
 */
proto.pandora.SharePhotoToWXRequest.prototype.getMediaTagName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.SharePhotoToWXRequest} returns this
 */
proto.pandora.SharePhotoToWXRequest.prototype.setMediaTagName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message_ext = 4;
 * @return {string}
 */
proto.pandora.SharePhotoToWXRequest.prototype.getMessageExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.SharePhotoToWXRequest} returns this
 */
proto.pandora.SharePhotoToWXRequest.prototype.setMessageExt = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string message_action = 5;
 * @return {string}
 */
proto.pandora.SharePhotoToWXRequest.prototype.getMessageAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.SharePhotoToWXRequest} returns this
 */
proto.pandora.SharePhotoToWXRequest.prototype.setMessageAction = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string game_object_path = 6;
 * @return {string}
 */
proto.pandora.SharePhotoToWXRequest.prototype.getGameObjectPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.SharePhotoToWXRequest} returns this
 */
proto.pandora.SharePhotoToWXRequest.prototype.setGameObjectPath = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of SharePhotoToWXRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.SharePhotoToWXRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.scene;

  /** @type {?|undefined} */
  this.mediaTagName;

  /** @type {?|undefined} */
  this.messageExt;

  /** @type {?|undefined} */
  this.messageAction;

  /** @type {?|undefined} */
  this.gameObjectPath;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.SharePhotoToWXRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.SharePhotoToWXRequest}
 */
proto.pandora.SharePhotoToWXRequest.fromObject = function(obj) {
  var msg = new proto.pandora.SharePhotoToWXRequest();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.scene != null && jspb.Message.setField(msg, 2, obj.scene);
  obj.mediaTagName != null && jspb.Message.setField(msg, 3, obj.mediaTagName);
  obj.messageExt != null && jspb.Message.setField(msg, 4, obj.messageExt);
  obj.messageAction != null && jspb.Message.setField(msg, 5, obj.messageAction);
  obj.gameObjectPath != null && jspb.Message.setField(msg, 6, obj.gameObjectPath);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.SharePhotoToQQRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.SharePhotoToQQRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.SharePhotoToQQRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.SharePhotoToQQRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scene: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gameObjectPath: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.SharePhotoToQQRequest}
 */
proto.pandora.SharePhotoToQQRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.SharePhotoToQQRequest;
  return proto.pandora.SharePhotoToQQRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.SharePhotoToQQRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.SharePhotoToQQRequest}
 */
proto.pandora.SharePhotoToQQRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScene(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameObjectPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.SharePhotoToQQRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.SharePhotoToQQRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.SharePhotoToQQRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.SharePhotoToQQRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScene();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGameObjectPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.pandora.SharePhotoToQQRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.SharePhotoToQQRequest} returns this
 */
proto.pandora.SharePhotoToQQRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scene = 2;
 * @return {string}
 */
proto.pandora.SharePhotoToQQRequest.prototype.getScene = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.SharePhotoToQQRequest} returns this
 */
proto.pandora.SharePhotoToQQRequest.prototype.setScene = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string game_object_path = 3;
 * @return {string}
 */
proto.pandora.SharePhotoToQQRequest.prototype.getGameObjectPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.SharePhotoToQQRequest} returns this
 */
proto.pandora.SharePhotoToQQRequest.prototype.setGameObjectPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of SharePhotoToQQRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.SharePhotoToQQRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.scene;

  /** @type {?|undefined} */
  this.gameObjectPath;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.SharePhotoToQQRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.SharePhotoToQQRequest}
 */
proto.pandora.SharePhotoToQQRequest.fromObject = function(obj) {
  var msg = new proto.pandora.SharePhotoToQQRequest();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.scene != null && jspb.Message.setField(msg, 2, obj.scene);
  obj.gameObjectPath != null && jspb.Message.setField(msg, 3, obj.gameObjectPath);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.ShareStructMsgToQQGameFriendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.ShareStructMsgToQQGameFriendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    act: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userOpenId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 5, ""),
    targetUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    previewText: jspb.Message.getFieldWithDefault(msg, 8, ""),
    gameTag: jspb.Message.getFieldWithDefault(msg, 9, ""),
    msdkExtInfo: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.ShareStructMsgToQQGameFriendRequest;
  return proto.pandora.ShareStructMsgToQQGameFriendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.ShareStructMsgToQQGameFriendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAct(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserOpenId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewText(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameTag(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsdkExtInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.ShareStructMsgToQQGameFriendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.ShareStructMsgToQQGameFriendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAct();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserOpenId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTargetUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPreviewText();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getGameTag();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMsdkExtInfo();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string act = 2;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getAct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setAct = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_open_id = 3;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getUserOpenId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setUserOpenId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string desc = 5;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string target_url = 6;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getTargetUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setTargetUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string img_url = 7;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string preview_text = 8;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getPreviewText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setPreviewText = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string game_tag = 9;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getGameTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setGameTag = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string msdk_ext_info = 10;
 * @return {string}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.getMsdkExtInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest} returns this
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.prototype.setMsdkExtInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ShareStructMsgToQQGameFriendRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.act;

  /** @type {?|undefined} */
  this.userOpenId;

  /** @type {?|undefined} */
  this.title;

  /** @type {?|undefined} */
  this.desc;

  /** @type {?|undefined} */
  this.targetUrl;

  /** @type {?|undefined} */
  this.imgUrl;

  /** @type {?|undefined} */
  this.previewText;

  /** @type {?|undefined} */
  this.gameTag;

  /** @type {?|undefined} */
  this.msdkExtInfo;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.ShareStructMsgToQQGameFriendRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.ShareStructMsgToQQGameFriendRequest}
 */
proto.pandora.ShareStructMsgToQQGameFriendRequest.fromObject = function(obj) {
  var msg = new proto.pandora.ShareStructMsgToQQGameFriendRequest();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.act != null && jspb.Message.setField(msg, 2, obj.act);
  obj.userOpenId != null && jspb.Message.setField(msg, 3, obj.userOpenId);
  obj.title != null && jspb.Message.setField(msg, 4, obj.title);
  obj.desc != null && jspb.Message.setField(msg, 5, obj.desc);
  obj.targetUrl != null && jspb.Message.setField(msg, 6, obj.targetUrl);
  obj.imgUrl != null && jspb.Message.setField(msg, 7, obj.imgUrl);
  obj.previewText != null && jspb.Message.setField(msg, 8, obj.previewText);
  obj.gameTag != null && jspb.Message.setField(msg, 9, obj.gameTag);
  obj.msdkExtInfo != null && jspb.Message.setField(msg, 10, obj.msdkExtInfo);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.ShareUrlToWXRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.ShareUrlToWXRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.ShareUrlToWXRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareUrlToWXRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scene: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 4, ""),
    targetUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mediaTagName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    messageExt: jspb.Message.getFieldWithDefault(msg, 8, ""),
    userOpenId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.ShareUrlToWXRequest}
 */
proto.pandora.ShareUrlToWXRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.ShareUrlToWXRequest;
  return proto.pandora.ShareUrlToWXRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.ShareUrlToWXRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.ShareUrlToWXRequest}
 */
proto.pandora.ShareUrlToWXRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScene(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaTagName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageExt(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserOpenId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.ShareUrlToWXRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.ShareUrlToWXRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.ShareUrlToWXRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareUrlToWXRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScene();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTargetUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMediaTagName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMessageExt();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUserOpenId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.pandora.ShareUrlToWXRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareUrlToWXRequest} returns this
 */
proto.pandora.ShareUrlToWXRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scene = 2;
 * @return {string}
 */
proto.pandora.ShareUrlToWXRequest.prototype.getScene = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareUrlToWXRequest} returns this
 */
proto.pandora.ShareUrlToWXRequest.prototype.setScene = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.pandora.ShareUrlToWXRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareUrlToWXRequest} returns this
 */
proto.pandora.ShareUrlToWXRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string desc = 4;
 * @return {string}
 */
proto.pandora.ShareUrlToWXRequest.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareUrlToWXRequest} returns this
 */
proto.pandora.ShareUrlToWXRequest.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string target_url = 5;
 * @return {string}
 */
proto.pandora.ShareUrlToWXRequest.prototype.getTargetUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareUrlToWXRequest} returns this
 */
proto.pandora.ShareUrlToWXRequest.prototype.setTargetUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string media_tag_name = 6;
 * @return {string}
 */
proto.pandora.ShareUrlToWXRequest.prototype.getMediaTagName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareUrlToWXRequest} returns this
 */
proto.pandora.ShareUrlToWXRequest.prototype.setMediaTagName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string img_url = 7;
 * @return {string}
 */
proto.pandora.ShareUrlToWXRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareUrlToWXRequest} returns this
 */
proto.pandora.ShareUrlToWXRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string message_ext = 8;
 * @return {string}
 */
proto.pandora.ShareUrlToWXRequest.prototype.getMessageExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareUrlToWXRequest} returns this
 */
proto.pandora.ShareUrlToWXRequest.prototype.setMessageExt = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string user_open_id = 9;
 * @return {string}
 */
proto.pandora.ShareUrlToWXRequest.prototype.getUserOpenId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareUrlToWXRequest} returns this
 */
proto.pandora.ShareUrlToWXRequest.prototype.setUserOpenId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ShareUrlToWXRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.ShareUrlToWXRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.scene;

  /** @type {?|undefined} */
  this.title;

  /** @type {?|undefined} */
  this.desc;

  /** @type {?|undefined} */
  this.targetUrl;

  /** @type {?|undefined} */
  this.mediaTagName;

  /** @type {?|undefined} */
  this.imgUrl;

  /** @type {?|undefined} */
  this.messageExt;

  /** @type {?|undefined} */
  this.userOpenId;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.ShareUrlToWXRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.ShareUrlToWXRequest}
 */
proto.pandora.ShareUrlToWXRequest.fromObject = function(obj) {
  var msg = new proto.pandora.ShareUrlToWXRequest();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.scene != null && jspb.Message.setField(msg, 2, obj.scene);
  obj.title != null && jspb.Message.setField(msg, 3, obj.title);
  obj.desc != null && jspb.Message.setField(msg, 4, obj.desc);
  obj.targetUrl != null && jspb.Message.setField(msg, 5, obj.targetUrl);
  obj.mediaTagName != null && jspb.Message.setField(msg, 6, obj.mediaTagName);
  obj.imgUrl != null && jspb.Message.setField(msg, 7, obj.imgUrl);
  obj.messageExt != null && jspb.Message.setField(msg, 8, obj.messageExt);
  obj.userOpenId != null && jspb.Message.setField(msg, 9, obj.userOpenId);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.ShareMiniAppToWXRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.ShareMiniAppToWXRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareMiniAppToWXRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scene: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 4, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    webpageUrl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    path: jspb.Message.getFieldWithDefault(msg, 8, ""),
    withShareTicket: jspb.Message.getFieldWithDefault(msg, 9, ""),
    messageExt: jspb.Message.getFieldWithDefault(msg, 10, ""),
    messageAction: jspb.Message.getFieldWithDefault(msg, 11, ""),
    mediaTagName: jspb.Message.getFieldWithDefault(msg, 12, ""),
    programType: jspb.Message.getFieldWithDefault(msg, 13, ""),
    userOpenId: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.ShareMiniAppToWXRequest}
 */
proto.pandora.ShareMiniAppToWXRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.ShareMiniAppToWXRequest;
  return proto.pandora.ShareMiniAppToWXRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.ShareMiniAppToWXRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.ShareMiniAppToWXRequest}
 */
proto.pandora.ShareMiniAppToWXRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScene(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebpageUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWithShareTicket(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageExt(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageAction(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaTagName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramType(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserOpenId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.ShareMiniAppToWXRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.ShareMiniAppToWXRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareMiniAppToWXRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScene();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWebpageUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getWithShareTicket();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMessageExt();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMessageAction();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMediaTagName();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getProgramType();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getUserOpenId();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scene = 2;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getScene = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setScene = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string desc = 4;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string img_url = 5;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string webpage_url = 6;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getWebpageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setWebpageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user_name = 7;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string path = 8;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string with_share_ticket = 9;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getWithShareTicket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setWithShareTicket = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string message_ext = 10;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getMessageExt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setMessageExt = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string message_action = 11;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getMessageAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setMessageAction = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string media_tag_name = 12;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getMediaTagName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setMediaTagName = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string program_type = 13;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getProgramType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setProgramType = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string user_open_id = 14;
 * @return {string}
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.getUserOpenId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToWXRequest} returns this
 */
proto.pandora.ShareMiniAppToWXRequest.prototype.setUserOpenId = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ShareMiniAppToWXRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.ShareMiniAppToWXRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.scene;

  /** @type {?|undefined} */
  this.title;

  /** @type {?|undefined} */
  this.desc;

  /** @type {?|undefined} */
  this.imgUrl;

  /** @type {?|undefined} */
  this.webpageUrl;

  /** @type {?|undefined} */
  this.userName;

  /** @type {?|undefined} */
  this.path;

  /** @type {?|undefined} */
  this.withShareTicket;

  /** @type {?|undefined} */
  this.messageExt;

  /** @type {?|undefined} */
  this.messageAction;

  /** @type {?|undefined} */
  this.mediaTagName;

  /** @type {?|undefined} */
  this.programType;

  /** @type {?|undefined} */
  this.userOpenId;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.ShareMiniAppToWXRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.ShareMiniAppToWXRequest}
 */
proto.pandora.ShareMiniAppToWXRequest.fromObject = function(obj) {
  var msg = new proto.pandora.ShareMiniAppToWXRequest();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.scene != null && jspb.Message.setField(msg, 2, obj.scene);
  obj.title != null && jspb.Message.setField(msg, 3, obj.title);
  obj.desc != null && jspb.Message.setField(msg, 4, obj.desc);
  obj.imgUrl != null && jspb.Message.setField(msg, 5, obj.imgUrl);
  obj.webpageUrl != null && jspb.Message.setField(msg, 6, obj.webpageUrl);
  obj.userName != null && jspb.Message.setField(msg, 7, obj.userName);
  obj.path != null && jspb.Message.setField(msg, 8, obj.path);
  obj.withShareTicket != null && jspb.Message.setField(msg, 9, obj.withShareTicket);
  obj.messageExt != null && jspb.Message.setField(msg, 10, obj.messageExt);
  obj.messageAction != null && jspb.Message.setField(msg, 11, obj.messageAction);
  obj.mediaTagName != null && jspb.Message.setField(msg, 12, obj.mediaTagName);
  obj.programType != null && jspb.Message.setField(msg, 13, obj.programType);
  obj.userOpenId != null && jspb.Message.setField(msg, 14, obj.userOpenId);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.ShareMiniAppToQQRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.ShareMiniAppToQQRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareMiniAppToQQRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scene: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 4, ""),
    imgUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    url: jspb.Message.getFieldWithDefault(msg, 6, ""),
    miniProgramAppid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    miniProgramPath: jspb.Message.getFieldWithDefault(msg, 8, ""),
    programType: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.ShareMiniAppToQQRequest}
 */
proto.pandora.ShareMiniAppToQQRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.ShareMiniAppToQQRequest;
  return proto.pandora.ShareMiniAppToQQRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.ShareMiniAppToQQRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.ShareMiniAppToQQRequest}
 */
proto.pandora.ShareMiniAppToQQRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScene(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiniProgramAppid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiniProgramPath(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.ShareMiniAppToQQRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.ShareMiniAppToQQRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ShareMiniAppToQQRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScene();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getImgUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMiniProgramAppid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMiniProgramPath();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getProgramType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToQQRequest} returns this
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scene = 2;
 * @return {string}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.getScene = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToQQRequest} returns this
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.setScene = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToQQRequest} returns this
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string desc = 4;
 * @return {string}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToQQRequest} returns this
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string img_url = 5;
 * @return {string}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.getImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToQQRequest} returns this
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.setImgUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToQQRequest} returns this
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string mini_program_appid = 7;
 * @return {string}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.getMiniProgramAppid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToQQRequest} returns this
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.setMiniProgramAppid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string mini_program_path = 8;
 * @return {string}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.getMiniProgramPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToQQRequest} returns this
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.setMiniProgramPath = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string program_type = 9;
 * @return {string}
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.getProgramType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ShareMiniAppToQQRequest} returns this
 */
proto.pandora.ShareMiniAppToQQRequest.prototype.setProgramType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ShareMiniAppToQQRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.ShareMiniAppToQQRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.type;

  /** @type {?|undefined} */
  this.scene;

  /** @type {?|undefined} */
  this.title;

  /** @type {?|undefined} */
  this.desc;

  /** @type {?|undefined} */
  this.imgUrl;

  /** @type {?|undefined} */
  this.url;

  /** @type {?|undefined} */
  this.miniProgramAppid;

  /** @type {?|undefined} */
  this.miniProgramPath;

  /** @type {?|undefined} */
  this.programType;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.ShareMiniAppToQQRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.ShareMiniAppToQQRequest}
 */
proto.pandora.ShareMiniAppToQQRequest.fromObject = function(obj) {
  var msg = new proto.pandora.ShareMiniAppToQQRequest();
  obj.type != null && jspb.Message.setField(msg, 1, obj.type);
  obj.scene != null && jspb.Message.setField(msg, 2, obj.scene);
  obj.title != null && jspb.Message.setField(msg, 3, obj.title);
  obj.desc != null && jspb.Message.setField(msg, 4, obj.desc);
  obj.imgUrl != null && jspb.Message.setField(msg, 5, obj.imgUrl);
  obj.url != null && jspb.Message.setField(msg, 6, obj.url);
  obj.miniProgramAppid != null && jspb.Message.setField(msg, 7, obj.miniProgramAppid);
  obj.miniProgramPath != null && jspb.Message.setField(msg, 8, obj.miniProgramPath);
  obj.programType != null && jspb.Message.setField(msg, 9, obj.programType);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.BrokerHead.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.BrokerHead.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.BrokerHead} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerHead.toObject = function(includeInstance, msg) {
  var f, obj = {
    seqId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cmdId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    msgType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sdkVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    gameAppId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    infoId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    platId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    areaId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    patitionId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    openId: jspb.Message.getFieldWithDefault(msg, 11, ""),
    roleId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 13, ""),
    actStyle: jspb.Message.getFieldWithDefault(msg, 14, ""),
    fromIp: jspb.Message.getFieldWithDefault(msg, 15, ""),
    body: jspb.Message.getFieldWithDefault(msg, 16, ""),
    accessToken: jspb.Message.getFieldWithDefault(msg, 17, ""),
    accType: jspb.Message.getFieldWithDefault(msg, 18, ""),
    gameEnv: jspb.Message.getFieldWithDefault(msg, 19, ""),
    pandoraSeq: jspb.Message.getFieldWithDefault(msg, 20, ""),
    pf: jspb.Message.getFieldWithDefault(msg, 21, ""),
    reqTimestamp: jspb.Message.getFieldWithDefault(msg, 22, ""),
    rspTimestamp: jspb.Message.getFieldWithDefault(msg, 23, ""),
    result: jspb.Message.getFieldWithDefault(msg, 24, ""),
    isInfoidlist: jspb.Message.getFieldWithDefault(msg, 25, ""),
    language: jspb.Message.getFieldWithDefault(msg, 26, ""),
    source: jspb.Message.getFieldWithDefault(msg, 27, ""),
    errDesc: jspb.Message.getFieldWithDefault(msg, 28, ""),
    credid: jspb.Message.getFieldWithDefault(msg, 29, ""),
    pandoraRoleKey: jspb.Message.getFieldWithDefault(msg, 30, ""),
    proxyMainCmdId: jspb.Message.getFieldWithDefault(msg, 31, ""),
    sig: jspb.Message.getFieldWithDefault(msg, 32, ""),
    belongingId: jspb.Message.getFieldWithDefault(msg, 33, ""),
    opVersion: jspb.Message.getFieldWithDefault(msg, 34, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.BrokerHead}
 */
proto.pandora.BrokerHead.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.BrokerHead;
  return proto.pandora.BrokerHead.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.BrokerHead} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.BrokerHead}
 */
proto.pandora.BrokerHead.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeqId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCmdId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdkVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameAppId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfoId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatitionId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoleId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setActStyle(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromIp(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessToken(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccType(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameEnv(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setPandoraSeq(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setPf(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setReqTimestamp(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setRspTimestamp(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsInfoidlist(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrDesc(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredid(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setPandoraRoleKey(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setProxyMainCmdId(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setSig(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setBelongingId(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.BrokerHead.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.BrokerHead.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.BrokerHead} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerHead.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeqId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCmdId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMsgType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSdkVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGameAppId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInfoId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPlatId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAreaId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPatitionId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOpenId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRoleId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getActStyle();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getFromIp();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getAccessToken();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getAccType();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getGameEnv();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getPandoraSeq();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getPf();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getReqTimestamp();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getRspTimestamp();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getIsInfoidlist();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getErrDesc();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getCredid();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getPandoraRoleKey();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getProxyMainCmdId();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getSig();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getBelongingId();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getOpVersion();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
};


/**
 * optional string seq_id = 1;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getSeqId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setSeqId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cmd_id = 2;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getCmdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setCmdId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string msg_type = 3;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getMsgType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setMsgType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string sdk_version = 4;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getSdkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setSdkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string game_app_id = 5;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getGameAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setGameAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string channel_id = 6;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string info_id = 7;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getInfoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setInfoId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string plat_id = 8;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getPlatId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setPlatId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string area_id = 9;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getAreaId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setAreaId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string patition_id = 10;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getPatitionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setPatitionId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string open_id = 11;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getOpenId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setOpenId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string role_id = 12;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getRoleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string timestamp = 13;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string act_style = 14;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getActStyle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setActStyle = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string from_ip = 15;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getFromIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setFromIp = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string body = 16;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string access_token = 17;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getAccessToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setAccessToken = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string acc_type = 18;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getAccType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setAccType = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string game_env = 19;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getGameEnv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setGameEnv = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string pandora_seq = 20;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getPandoraSeq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setPandoraSeq = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string pf = 21;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getPf = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setPf = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string req_timestamp = 22;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getReqTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setReqTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string rsp_timestamp = 23;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getRspTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setRspTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string result = 24;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string is_infoidlist = 25;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getIsInfoidlist = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setIsInfoidlist = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string language = 26;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string source = 27;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string err_desc = 28;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getErrDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setErrDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string credid = 29;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getCredid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setCredid = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string pandora_role_key = 30;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getPandoraRoleKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setPandoraRoleKey = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string proxy_main_cmd_id = 31;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getProxyMainCmdId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setProxyMainCmdId = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string sig = 32;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getSig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setSig = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string belonging_id = 33;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getBelongingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setBelongingId = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string op_version = 34;
 * @return {string}
 */
proto.pandora.BrokerHead.prototype.getOpVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerHead} returns this
 */
proto.pandora.BrokerHead.prototype.setOpVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of BrokerHead as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.BrokerHead.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.seqId;

  /** @type {?|undefined} */
  this.cmdId;

  /** @type {?|undefined} */
  this.msgType;

  /** @type {?|undefined} */
  this.sdkVersion;

  /** @type {?|undefined} */
  this.gameAppId;

  /** @type {?|undefined} */
  this.channelId;

  /** @type {?|undefined} */
  this.infoId;

  /** @type {?|undefined} */
  this.platId;

  /** @type {?|undefined} */
  this.areaId;

  /** @type {?|undefined} */
  this.patitionId;

  /** @type {?|undefined} */
  this.openId;

  /** @type {?|undefined} */
  this.roleId;

  /** @type {?|undefined} */
  this.timestamp;

  /** @type {?|undefined} */
  this.actStyle;

  /** @type {?|undefined} */
  this.fromIp;

  /** @type {?|undefined} */
  this.body;

  /** @type {?|undefined} */
  this.accessToken;

  /** @type {?|undefined} */
  this.accType;

  /** @type {?|undefined} */
  this.gameEnv;

  /** @type {?|undefined} */
  this.pandoraSeq;

  /** @type {?|undefined} */
  this.pf;

  /** @type {?|undefined} */
  this.reqTimestamp;

  /** @type {?|undefined} */
  this.rspTimestamp;

  /** @type {?|undefined} */
  this.result;

  /** @type {?|undefined} */
  this.isInfoidlist;

  /** @type {?|undefined} */
  this.language;

  /** @type {?|undefined} */
  this.source;

  /** @type {?|undefined} */
  this.errDesc;

  /** @type {?|undefined} */
  this.credid;

  /** @type {?|undefined} */
  this.pandoraRoleKey;

  /** @type {?|undefined} */
  this.proxyMainCmdId;

  /** @type {?|undefined} */
  this.sig;

  /** @type {?|undefined} */
  this.belongingId;

  /** @type {?|undefined} */
  this.opVersion;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.BrokerHead.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.BrokerHead}
 */
proto.pandora.BrokerHead.fromObject = function(obj) {
  var msg = new proto.pandora.BrokerHead();
  obj.seqId != null && jspb.Message.setField(msg, 1, obj.seqId);
  obj.cmdId != null && jspb.Message.setField(msg, 2, obj.cmdId);
  obj.msgType != null && jspb.Message.setField(msg, 3, obj.msgType);
  obj.sdkVersion != null && jspb.Message.setField(msg, 4, obj.sdkVersion);
  obj.gameAppId != null && jspb.Message.setField(msg, 5, obj.gameAppId);
  obj.channelId != null && jspb.Message.setField(msg, 6, obj.channelId);
  obj.infoId != null && jspb.Message.setField(msg, 7, obj.infoId);
  obj.platId != null && jspb.Message.setField(msg, 8, obj.platId);
  obj.areaId != null && jspb.Message.setField(msg, 9, obj.areaId);
  obj.patitionId != null && jspb.Message.setField(msg, 10, obj.patitionId);
  obj.openId != null && jspb.Message.setField(msg, 11, obj.openId);
  obj.roleId != null && jspb.Message.setField(msg, 12, obj.roleId);
  obj.timestamp != null && jspb.Message.setField(msg, 13, obj.timestamp);
  obj.actStyle != null && jspb.Message.setField(msg, 14, obj.actStyle);
  obj.fromIp != null && jspb.Message.setField(msg, 15, obj.fromIp);
  obj.body != null && jspb.Message.setField(msg, 16, obj.body);
  obj.accessToken != null && jspb.Message.setField(msg, 17, obj.accessToken);
  obj.accType != null && jspb.Message.setField(msg, 18, obj.accType);
  obj.gameEnv != null && jspb.Message.setField(msg, 19, obj.gameEnv);
  obj.pandoraSeq != null && jspb.Message.setField(msg, 20, obj.pandoraSeq);
  obj.pf != null && jspb.Message.setField(msg, 21, obj.pf);
  obj.reqTimestamp != null && jspb.Message.setField(msg, 22, obj.reqTimestamp);
  obj.rspTimestamp != null && jspb.Message.setField(msg, 23, obj.rspTimestamp);
  obj.result != null && jspb.Message.setField(msg, 24, obj.result);
  obj.isInfoidlist != null && jspb.Message.setField(msg, 25, obj.isInfoidlist);
  obj.language != null && jspb.Message.setField(msg, 26, obj.language);
  obj.source != null && jspb.Message.setField(msg, 27, obj.source);
  obj.errDesc != null && jspb.Message.setField(msg, 28, obj.errDesc);
  obj.credid != null && jspb.Message.setField(msg, 29, obj.credid);
  obj.pandoraRoleKey != null && jspb.Message.setField(msg, 30, obj.pandoraRoleKey);
  obj.proxyMainCmdId != null && jspb.Message.setField(msg, 31, obj.proxyMainCmdId);
  obj.sig != null && jspb.Message.setField(msg, 32, obj.sig);
  obj.belongingId != null && jspb.Message.setField(msg, 33, obj.belongingId);
  obj.opVersion != null && jspb.Message.setField(msg, 34, obj.opVersion);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.Act_info.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.Act_info.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.Act_info} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Act_info.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getFieldWithDefault(msg, 1, ""),
    actPriority: jspb.Message.getFieldWithDefault(msg, 2, ""),
    infoId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    actContent: jspb.Message.getFieldWithDefault(msg, 4, ""),
    daojuchengId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    actStyle: jspb.Message.getFieldWithDefault(msg, 6, ""),
    actTitle: jspb.Message.getFieldWithDefault(msg, 7, ""),
    actBegTime: jspb.Message.getFieldWithDefault(msg, 8, ""),
    actEndTime: jspb.Message.getFieldWithDefault(msg, 9, ""),
    status: jspb.Message.getFieldWithDefault(msg, 10, ""),
    gameVers: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.Act_info}
 */
proto.pandora.Act_info.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.Act_info;
  return proto.pandora.Act_info.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.Act_info} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.Act_info}
 */
proto.pandora.Act_info.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActPriority(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfoId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setActContent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDaojuchengId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setActStyle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setActTitle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setActBegTime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setActEndTime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameVers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.Act_info.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.Act_info.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.Act_info} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Act_info.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActPriority();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInfoId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getActContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDaojuchengId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getActStyle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getActTitle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getActBegTime();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getActEndTime();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getGameVers();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string tag = 1;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string act_priority = 2;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getActPriority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setActPriority = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string info_id = 3;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getInfoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setInfoId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string act_content = 4;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getActContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setActContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string daojucheng_id = 5;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getDaojuchengId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setDaojuchengId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string act_style = 6;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getActStyle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setActStyle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string act_title = 7;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getActTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setActTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string act_beg_time = 8;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getActBegTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setActBegTime = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string act_end_time = 9;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getActEndTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setActEndTime = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string status = 10;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string game_vers = 11;
 * @return {string}
 */
proto.pandora.Act_info.prototype.getGameVers = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Act_info} returns this
 */
proto.pandora.Act_info.prototype.setGameVers = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Act_info as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.Act_info.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.tag;

  /** @type {?|undefined} */
  this.actPriority;

  /** @type {?|undefined} */
  this.infoId;

  /** @type {?|undefined} */
  this.actContent;

  /** @type {?|undefined} */
  this.daojuchengId;

  /** @type {?|undefined} */
  this.actStyle;

  /** @type {?|undefined} */
  this.actTitle;

  /** @type {?|undefined} */
  this.actBegTime;

  /** @type {?|undefined} */
  this.actEndTime;

  /** @type {?|undefined} */
  this.status;

  /** @type {?|undefined} */
  this.gameVers;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.Act_info.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.Act_info}
 */
proto.pandora.Act_info.fromObject = function(obj) {
  var msg = new proto.pandora.Act_info();
  obj.tag != null && jspb.Message.setField(msg, 1, obj.tag);
  obj.actPriority != null && jspb.Message.setField(msg, 2, obj.actPriority);
  obj.infoId != null && jspb.Message.setField(msg, 3, obj.infoId);
  obj.actContent != null && jspb.Message.setField(msg, 4, obj.actContent);
  obj.daojuchengId != null && jspb.Message.setField(msg, 5, obj.daojuchengId);
  obj.actStyle != null && jspb.Message.setField(msg, 6, obj.actStyle);
  obj.actTitle != null && jspb.Message.setField(msg, 7, obj.actTitle);
  obj.actBegTime != null && jspb.Message.setField(msg, 8, obj.actBegTime);
  obj.actEndTime != null && jspb.Message.setField(msg, 9, obj.actEndTime);
  obj.status != null && jspb.Message.setField(msg, 10, obj.status);
  obj.gameVers != null && jspb.Message.setField(msg, 11, obj.gameVers);
  return msg;
};
}


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pandora.Online_msg_info.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.Online_msg_info.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.Online_msg_info.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.Online_msg_info} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Online_msg_info.toObject = function(includeInstance, msg) {
  var f, obj = {
    actListList: jspb.Message.toObjectList(msg.getActListList(),
    proto.pandora.Act_info.toObject, includeInstance),
    actNum: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.Online_msg_info}
 */
proto.pandora.Online_msg_info.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.Online_msg_info;
  return proto.pandora.Online_msg_info.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.Online_msg_info} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.Online_msg_info}
 */
proto.pandora.Online_msg_info.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pandora.Act_info;
      reader.readMessage(value,proto.pandora.Act_info.deserializeBinaryFromReader);
      msg.addActList(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.Online_msg_info.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.Online_msg_info.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.Online_msg_info} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.Online_msg_info.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pandora.Act_info.serializeBinaryToWriter
    );
  }
  f = message.getActNum();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Act_info act_list = 1;
 * @return {!Array<!proto.pandora.Act_info>}
 */
proto.pandora.Online_msg_info.prototype.getActListList = function() {
  return /** @type{!Array<!proto.pandora.Act_info>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pandora.Act_info, 1));
};


/**
 * @param {!Array<!proto.pandora.Act_info>} value
 * @return {!proto.pandora.Online_msg_info} returns this
*/
proto.pandora.Online_msg_info.prototype.setActListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pandora.Act_info=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pandora.Act_info}
 */
proto.pandora.Online_msg_info.prototype.addActList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pandora.Act_info, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pandora.Online_msg_info} returns this
 */
proto.pandora.Online_msg_info.prototype.clearActListList = function() {
  return this.setActListList([]);
};


/**
 * optional string act_num = 2;
 * @return {string}
 */
proto.pandora.Online_msg_info.prototype.getActNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.Online_msg_info} returns this
 */
proto.pandora.Online_msg_info.prototype.setActNum = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of Online_msg_info as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.Online_msg_info.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.actListList;

  /** @type {?|undefined} */
  this.actNum;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.Online_msg_info.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.Online_msg_info}
 */
proto.pandora.Online_msg_info.fromObject = function(obj) {
  var msg = new proto.pandora.Online_msg_info();
  obj.actListList && jspb.Message.setRepeatedWrapperField(
      msg, 1, obj.actListList.map(
          proto.pandora.Act_info.fromObject));
  obj.actNum != null && jspb.Message.setField(msg, 2, obj.actNum);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.BrokerBody.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.BrokerBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.BrokerBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    onlineMsgInfo: (f = msg.getOnlineMsgInfo()) && proto.pandora.Online_msg_info.toObject(includeInstance, f),
    md5Val: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ret: jspb.Message.getFieldWithDefault(msg, 3, ""),
    errMsg: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tipMsg: jspb.Message.getFieldWithDefault(msg, 5, ""),
    extendInfo: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.BrokerBody}
 */
proto.pandora.BrokerBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.BrokerBody;
  return proto.pandora.BrokerBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.BrokerBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.BrokerBody}
 */
proto.pandora.BrokerBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pandora.Online_msg_info;
      reader.readMessage(value,proto.pandora.Online_msg_info.deserializeBinaryFromReader);
      msg.setOnlineMsgInfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMd5Val(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRet(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrMsg(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTipMsg(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtendInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.BrokerBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.BrokerBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.BrokerBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnlineMsgInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pandora.Online_msg_info.serializeBinaryToWriter
    );
  }
  f = message.getMd5Val();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRet();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getErrMsg();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTipMsg();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExtendInfo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional Online_msg_info online_msg_info = 1;
 * @return {?proto.pandora.Online_msg_info}
 */
proto.pandora.BrokerBody.prototype.getOnlineMsgInfo = function() {
  return /** @type{?proto.pandora.Online_msg_info} */ (
    jspb.Message.getWrapperField(this, proto.pandora.Online_msg_info, 1));
};


/**
 * @param {?proto.pandora.Online_msg_info|undefined} value
 * @return {!proto.pandora.BrokerBody} returns this
*/
proto.pandora.BrokerBody.prototype.setOnlineMsgInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pandora.BrokerBody} returns this
 */
proto.pandora.BrokerBody.prototype.clearOnlineMsgInfo = function() {
  return this.setOnlineMsgInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pandora.BrokerBody.prototype.hasOnlineMsgInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string md5_val = 2;
 * @return {string}
 */
proto.pandora.BrokerBody.prototype.getMd5Val = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerBody} returns this
 */
proto.pandora.BrokerBody.prototype.setMd5Val = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ret = 3;
 * @return {string}
 */
proto.pandora.BrokerBody.prototype.getRet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerBody} returns this
 */
proto.pandora.BrokerBody.prototype.setRet = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string err_msg = 4;
 * @return {string}
 */
proto.pandora.BrokerBody.prototype.getErrMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerBody} returns this
 */
proto.pandora.BrokerBody.prototype.setErrMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tip_msg = 5;
 * @return {string}
 */
proto.pandora.BrokerBody.prototype.getTipMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerBody} returns this
 */
proto.pandora.BrokerBody.prototype.setTipMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string extend_info = 6;
 * @return {string}
 */
proto.pandora.BrokerBody.prototype.getExtendInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.BrokerBody} returns this
 */
proto.pandora.BrokerBody.prototype.setExtendInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of BrokerBody as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.BrokerBody.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.onlineMsgInfo;

  /** @type {?|undefined} */
  this.md5Val;

  /** @type {?|undefined} */
  this.ret;

  /** @type {?|undefined} */
  this.errMsg;

  /** @type {?|undefined} */
  this.tipMsg;

  /** @type {?|undefined} */
  this.extendInfo;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.BrokerBody.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.BrokerBody}
 */
proto.pandora.BrokerBody.fromObject = function(obj) {
  var msg = new proto.pandora.BrokerBody();
  obj.onlineMsgInfo && jspb.Message.setWrapperField(
      msg, 1, proto.pandora.Online_msg_info.fromObject(obj.onlineMsgInfo));
  obj.md5Val != null && jspb.Message.setField(msg, 2, obj.md5Val);
  obj.ret != null && jspb.Message.setField(msg, 3, obj.ret);
  obj.errMsg != null && jspb.Message.setField(msg, 4, obj.errMsg);
  obj.tipMsg != null && jspb.Message.setField(msg, 5, obj.tipMsg);
  obj.extendInfo != null && jspb.Message.setField(msg, 6, obj.extendInfo);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.BrokerMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.BrokerMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.BrokerMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    head: (f = msg.getHead()) && proto.pandora.BrokerHead.toObject(includeInstance, f),
    body: (f = msg.getBody()) && proto.pandora.BrokerBody.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.BrokerMessage}
 */
proto.pandora.BrokerMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.BrokerMessage;
  return proto.pandora.BrokerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.BrokerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.BrokerMessage}
 */
proto.pandora.BrokerMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pandora.BrokerHead;
      reader.readMessage(value,proto.pandora.BrokerHead.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    case 2:
      var value = new proto.pandora.BrokerBody;
      reader.readMessage(value,proto.pandora.BrokerBody.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.BrokerMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.BrokerMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.BrokerMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pandora.BrokerHead.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pandora.BrokerBody.serializeBinaryToWriter
    );
  }
};


/**
 * optional BrokerHead head = 1;
 * @return {?proto.pandora.BrokerHead}
 */
proto.pandora.BrokerMessage.prototype.getHead = function() {
  return /** @type{?proto.pandora.BrokerHead} */ (
    jspb.Message.getWrapperField(this, proto.pandora.BrokerHead, 1));
};


/**
 * @param {?proto.pandora.BrokerHead|undefined} value
 * @return {!proto.pandora.BrokerMessage} returns this
*/
proto.pandora.BrokerMessage.prototype.setHead = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pandora.BrokerMessage} returns this
 */
proto.pandora.BrokerMessage.prototype.clearHead = function() {
  return this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pandora.BrokerMessage.prototype.hasHead = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BrokerBody body = 2;
 * @return {?proto.pandora.BrokerBody}
 */
proto.pandora.BrokerMessage.prototype.getBody = function() {
  return /** @type{?proto.pandora.BrokerBody} */ (
    jspb.Message.getWrapperField(this, proto.pandora.BrokerBody, 2));
};


/**
 * @param {?proto.pandora.BrokerBody|undefined} value
 * @return {!proto.pandora.BrokerMessage} returns this
*/
proto.pandora.BrokerMessage.prototype.setBody = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pandora.BrokerMessage} returns this
 */
proto.pandora.BrokerMessage.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pandora.BrokerMessage.prototype.hasBody = function() {
  return jspb.Message.getField(this, 2) != null;
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of BrokerMessage as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.BrokerMessage.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.head;

  /** @type {?|undefined} */
  this.body;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.BrokerMessage.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.BrokerMessage}
 */
proto.pandora.BrokerMessage.fromObject = function(obj) {
  var msg = new proto.pandora.BrokerMessage();
  obj.head && jspb.Message.setWrapperField(
      msg, 1, proto.pandora.BrokerHead.fromObject(obj.head));
  obj.body && jspb.Message.setWrapperField(
      msg, 2, proto.pandora.BrokerBody.fromObject(obj.body));
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.BrokerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.BrokerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.BrokerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: (f = msg.getMessage()) && proto.pandora.BrokerMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.BrokerRequest}
 */
proto.pandora.BrokerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.BrokerRequest;
  return proto.pandora.BrokerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.BrokerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.BrokerRequest}
 */
proto.pandora.BrokerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new proto.pandora.BrokerMessage;
      reader.readMessage(value,proto.pandora.BrokerMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.BrokerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.BrokerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.BrokerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pandora.BrokerMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 command_id = 1;
 * @return {number}
 */
proto.pandora.BrokerRequest.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.BrokerRequest} returns this
 */
proto.pandora.BrokerRequest.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional BrokerMessage message = 2;
 * @return {?proto.pandora.BrokerMessage}
 */
proto.pandora.BrokerRequest.prototype.getMessage = function() {
  return /** @type{?proto.pandora.BrokerMessage} */ (
    jspb.Message.getWrapperField(this, proto.pandora.BrokerMessage, 2));
};


/**
 * @param {?proto.pandora.BrokerMessage|undefined} value
 * @return {!proto.pandora.BrokerRequest} returns this
*/
proto.pandora.BrokerRequest.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pandora.BrokerRequest} returns this
 */
proto.pandora.BrokerRequest.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pandora.BrokerRequest.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of BrokerRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.BrokerRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.commandId;

  /** @type {?|undefined} */
  this.message;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.BrokerRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.BrokerRequest}
 */
proto.pandora.BrokerRequest.fromObject = function(obj) {
  var msg = new proto.pandora.BrokerRequest();
  obj.commandId != null && jspb.Message.setField(msg, 1, obj.commandId);
  obj.message && jspb.Message.setWrapperField(
      msg, 2, proto.pandora.BrokerMessage.fromObject(obj.message));
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.ApplicationBrokerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.ApplicationBrokerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.ApplicationBrokerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ApplicationBrokerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    subCommandId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    applicationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    appKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    requestBodyStr: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.ApplicationBrokerRequest}
 */
proto.pandora.ApplicationBrokerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.ApplicationBrokerRequest;
  return proto.pandora.ApplicationBrokerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.ApplicationBrokerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.ApplicationBrokerRequest}
 */
proto.pandora.ApplicationBrokerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommandId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubCommandId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setApplicationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestBodyStr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.ApplicationBrokerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.ApplicationBrokerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.ApplicationBrokerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ApplicationBrokerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSubCommandId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getAppKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRequestBodyStr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 command_id = 1;
 * @return {number}
 */
proto.pandora.ApplicationBrokerRequest.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.ApplicationBrokerRequest} returns this
 */
proto.pandora.ApplicationBrokerRequest.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 sub_command_id = 2;
 * @return {number}
 */
proto.pandora.ApplicationBrokerRequest.prototype.getSubCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.ApplicationBrokerRequest} returns this
 */
proto.pandora.ApplicationBrokerRequest.prototype.setSubCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 application_id = 3;
 * @return {number}
 */
proto.pandora.ApplicationBrokerRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.ApplicationBrokerRequest} returns this
 */
proto.pandora.ApplicationBrokerRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string app_key = 4;
 * @return {string}
 */
proto.pandora.ApplicationBrokerRequest.prototype.getAppKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ApplicationBrokerRequest} returns this
 */
proto.pandora.ApplicationBrokerRequest.prototype.setAppKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string request_body_str = 5;
 * @return {string}
 */
proto.pandora.ApplicationBrokerRequest.prototype.getRequestBodyStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ApplicationBrokerRequest} returns this
 */
proto.pandora.ApplicationBrokerRequest.prototype.setRequestBodyStr = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ApplicationBrokerRequest as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.ApplicationBrokerRequest.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.commandId;

  /** @type {?|undefined} */
  this.subCommandId;

  /** @type {?|undefined} */
  this.applicationId;

  /** @type {?|undefined} */
  this.appKey;

  /** @type {?|undefined} */
  this.requestBodyStr;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.ApplicationBrokerRequest.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.ApplicationBrokerRequest}
 */
proto.pandora.ApplicationBrokerRequest.fromObject = function(obj) {
  var msg = new proto.pandora.ApplicationBrokerRequest();
  obj.commandId != null && jspb.Message.setField(msg, 1, obj.commandId);
  obj.subCommandId != null && jspb.Message.setField(msg, 2, obj.subCommandId);
  obj.applicationId != null && jspb.Message.setField(msg, 3, obj.applicationId);
  obj.appKey != null && jspb.Message.setField(msg, 4, obj.appKey);
  obj.requestBodyStr != null && jspb.Message.setField(msg, 5, obj.requestBodyStr);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.BrokerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.BrokerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.BrokerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: (f = msg.getMessage()) && proto.pandora.BrokerMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.BrokerResponse}
 */
proto.pandora.BrokerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.BrokerResponse;
  return proto.pandora.BrokerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.BrokerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.BrokerResponse}
 */
proto.pandora.BrokerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new proto.pandora.BrokerMessage;
      reader.readMessage(value,proto.pandora.BrokerMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.BrokerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.BrokerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.BrokerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.BrokerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pandora.BrokerMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 command_id = 1;
 * @return {number}
 */
proto.pandora.BrokerResponse.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.BrokerResponse} returns this
 */
proto.pandora.BrokerResponse.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional BrokerMessage message = 2;
 * @return {?proto.pandora.BrokerMessage}
 */
proto.pandora.BrokerResponse.prototype.getMessage = function() {
  return /** @type{?proto.pandora.BrokerMessage} */ (
    jspb.Message.getWrapperField(this, proto.pandora.BrokerMessage, 2));
};


/**
 * @param {?proto.pandora.BrokerMessage|undefined} value
 * @return {!proto.pandora.BrokerResponse} returns this
*/
proto.pandora.BrokerResponse.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pandora.BrokerResponse} returns this
 */
proto.pandora.BrokerResponse.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pandora.BrokerResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of BrokerResponse as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.BrokerResponse.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.commandId;

  /** @type {?|undefined} */
  this.message;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.BrokerResponse.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.BrokerResponse}
 */
proto.pandora.BrokerResponse.fromObject = function(obj) {
  var msg = new proto.pandora.BrokerResponse();
  obj.commandId != null && jspb.Message.setField(msg, 1, obj.commandId);
  obj.message && jspb.Message.setWrapperField(
      msg, 2, proto.pandora.BrokerMessage.fromObject(obj.message));
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.ReportActivityErrorInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.ReportActivityErrorInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.ReportActivityErrorInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ReportActivityErrorInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    errMsg: jspb.Message.getFieldWithDefault(msg, 1, ""),
    applicationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tnmId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.ReportActivityErrorInfo}
 */
proto.pandora.ReportActivityErrorInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.ReportActivityErrorInfo;
  return proto.pandora.ReportActivityErrorInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.ReportActivityErrorInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.ReportActivityErrorInfo}
 */
proto.pandora.ReportActivityErrorInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrMsg(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setApplicationId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTnmId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.ReportActivityErrorInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.ReportActivityErrorInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.ReportActivityErrorInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.ReportActivityErrorInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTnmId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string err_msg = 1;
 * @return {string}
 */
proto.pandora.ReportActivityErrorInfo.prototype.getErrMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.ReportActivityErrorInfo} returns this
 */
proto.pandora.ReportActivityErrorInfo.prototype.setErrMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 application_id = 2;
 * @return {number}
 */
proto.pandora.ReportActivityErrorInfo.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.ReportActivityErrorInfo} returns this
 */
proto.pandora.ReportActivityErrorInfo.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 tnm_id = 3;
 * @return {number}
 */
proto.pandora.ReportActivityErrorInfo.prototype.getTnmId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.ReportActivityErrorInfo} returns this
 */
proto.pandora.ReportActivityErrorInfo.prototype.setTnmId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of ReportActivityErrorInfo as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.ReportActivityErrorInfo.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.errMsg;

  /** @type {?|undefined} */
  this.applicationId;

  /** @type {?|undefined} */
  this.tnmId;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.ReportActivityErrorInfo.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.ReportActivityErrorInfo}
 */
proto.pandora.ReportActivityErrorInfo.fromObject = function(obj) {
  var msg = new proto.pandora.ReportActivityErrorInfo();
  obj.errMsg != null && jspb.Message.setField(msg, 1, obj.errMsg);
  obj.applicationId != null && jspb.Message.setField(msg, 2, obj.applicationId);
  obj.tnmId != null && jspb.Message.setField(msg, 3, obj.tnmId);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.GVoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.GVoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.GVoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ret: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.GVoiceResponse}
 */
proto.pandora.GVoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.GVoiceResponse;
  return proto.pandora.GVoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.GVoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.GVoiceResponse}
 */
proto.pandora.GVoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.GVoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.GVoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.GVoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRet();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ret = 1;
 * @return {number}
 */
proto.pandora.GVoiceResponse.prototype.getRet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.GVoiceResponse} returns this
 */
proto.pandora.GVoiceResponse.prototype.setRet = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GVoiceResponse as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.GVoiceResponse.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.ret;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.GVoiceResponse.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.GVoiceResponse}
 */
proto.pandora.GVoiceResponse.fromObject = function(obj) {
  var msg = new proto.pandora.GVoiceResponse();
  obj.ret != null && jspb.Message.setField(msg, 1, obj.ret);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.GVoiceAppInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.GVoiceAppInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.GVoiceAppInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceAppInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    appId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    appKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    openId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.GVoiceAppInfo}
 */
proto.pandora.GVoiceAppInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.GVoiceAppInfo;
  return proto.pandora.GVoiceAppInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.GVoiceAppInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.GVoiceAppInfo}
 */
proto.pandora.GVoiceAppInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.GVoiceAppInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.GVoiceAppInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.GVoiceAppInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceAppInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOpenId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string app_id = 1;
 * @return {string}
 */
proto.pandora.GVoiceAppInfo.prototype.getAppId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GVoiceAppInfo} returns this
 */
proto.pandora.GVoiceAppInfo.prototype.setAppId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string app_key = 2;
 * @return {string}
 */
proto.pandora.GVoiceAppInfo.prototype.getAppKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GVoiceAppInfo} returns this
 */
proto.pandora.GVoiceAppInfo.prototype.setAppKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string open_id = 3;
 * @return {string}
 */
proto.pandora.GVoiceAppInfo.prototype.getOpenId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GVoiceAppInfo} returns this
 */
proto.pandora.GVoiceAppInfo.prototype.setOpenId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GVoiceAppInfo as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.GVoiceAppInfo.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.appId;

  /** @type {?|undefined} */
  this.appKey;

  /** @type {?|undefined} */
  this.openId;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.GVoiceAppInfo.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.GVoiceAppInfo}
 */
proto.pandora.GVoiceAppInfo.fromObject = function(obj) {
  var msg = new proto.pandora.GVoiceAppInfo();
  obj.appId != null && jspb.Message.setField(msg, 1, obj.appId);
  obj.appKey != null && jspb.Message.setField(msg, 2, obj.appKey);
  obj.openId != null && jspb.Message.setField(msg, 3, obj.openId);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.GVoiceServerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.GVoiceServerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.GVoiceServerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceServerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.GVoiceServerInfo}
 */
proto.pandora.GVoiceServerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.GVoiceServerInfo;
  return proto.pandora.GVoiceServerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.GVoiceServerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.GVoiceServerInfo}
 */
proto.pandora.GVoiceServerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.GVoiceServerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.GVoiceServerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.GVoiceServerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceServerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.pandora.GVoiceServerInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GVoiceServerInfo} returns this
 */
proto.pandora.GVoiceServerInfo.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GVoiceServerInfo as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.GVoiceServerInfo.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.url;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.GVoiceServerInfo.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.GVoiceServerInfo}
 */
proto.pandora.GVoiceServerInfo.fromObject = function(obj) {
  var msg = new proto.pandora.GVoiceServerInfo();
  obj.url != null && jspb.Message.setField(msg, 1, obj.url);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.GVoiceMode.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.GVoiceMode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.GVoiceMode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceMode.toObject = function(includeInstance, msg) {
  var f, obj = {
    mode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.GVoiceMode}
 */
proto.pandora.GVoiceMode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.GVoiceMode;
  return proto.pandora.GVoiceMode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.GVoiceMode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.GVoiceMode}
 */
proto.pandora.GVoiceMode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.GVoiceMode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.GVoiceMode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.GVoiceMode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceMode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 mode = 1;
 * @return {number}
 */
proto.pandora.GVoiceMode.prototype.getMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.GVoiceMode} returns this
 */
proto.pandora.GVoiceMode.prototype.setMode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GVoiceMode as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.GVoiceMode.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.mode;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.GVoiceMode.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.GVoiceMode}
 */
proto.pandora.GVoiceMode.fromObject = function(obj) {
  var msg = new proto.pandora.GVoiceMode();
  obj.mode != null && jspb.Message.setField(msg, 1, obj.mode);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.GVoiceTeamRoomInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.GVoiceTeamRoomInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.GVoiceTeamRoomInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceTeamRoomInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    msTimeout: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.GVoiceTeamRoomInfo}
 */
proto.pandora.GVoiceTeamRoomInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.GVoiceTeamRoomInfo;
  return proto.pandora.GVoiceTeamRoomInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.GVoiceTeamRoomInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.GVoiceTeamRoomInfo}
 */
proto.pandora.GVoiceTeamRoomInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMsTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.GVoiceTeamRoomInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.GVoiceTeamRoomInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.GVoiceTeamRoomInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceTeamRoomInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMsTimeout();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string room_name = 1;
 * @return {string}
 */
proto.pandora.GVoiceTeamRoomInfo.prototype.getRoomName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GVoiceTeamRoomInfo} returns this
 */
proto.pandora.GVoiceTeamRoomInfo.prototype.setRoomName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ms_timeout = 2;
 * @return {number}
 */
proto.pandora.GVoiceTeamRoomInfo.prototype.getMsTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pandora.GVoiceTeamRoomInfo} returns this
 */
proto.pandora.GVoiceTeamRoomInfo.prototype.setMsTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GVoiceTeamRoomInfo as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.GVoiceTeamRoomInfo.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.roomName;

  /** @type {?|undefined} */
  this.msTimeout;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.GVoiceTeamRoomInfo.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.GVoiceTeamRoomInfo}
 */
proto.pandora.GVoiceTeamRoomInfo.fromObject = function(obj) {
  var msg = new proto.pandora.GVoiceTeamRoomInfo();
  obj.roomName != null && jspb.Message.setField(msg, 1, obj.roomName);
  obj.msTimeout != null && jspb.Message.setField(msg, 2, obj.msTimeout);
  return msg;
};
}




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pandora.GVoiceRoomSetting.prototype.toObject = function(opt_includeInstance) {
  return proto.pandora.GVoiceRoomSetting.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pandora.GVoiceRoomSetting} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceRoomSetting.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    enable: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pandora.GVoiceRoomSetting}
 */
proto.pandora.GVoiceRoomSetting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pandora.GVoiceRoomSetting;
  return proto.pandora.GVoiceRoomSetting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pandora.GVoiceRoomSetting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pandora.GVoiceRoomSetting}
 */
proto.pandora.GVoiceRoomSetting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pandora.GVoiceRoomSetting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pandora.GVoiceRoomSetting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pandora.GVoiceRoomSetting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pandora.GVoiceRoomSetting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string room_name = 1;
 * @return {string}
 */
proto.pandora.GVoiceRoomSetting.prototype.getRoomName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pandora.GVoiceRoomSetting} returns this
 */
proto.pandora.GVoiceRoomSetting.prototype.setRoomName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool enable = 2;
 * @return {boolean}
 */
proto.pandora.GVoiceRoomSetting.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pandora.GVoiceRoomSetting} returns this
 */
proto.pandora.GVoiceRoomSetting.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


if (jspb.Message.GENERATE_FROM_OBJECT) {

/**
 * The raw object form of GVoiceRoomSetting as accepted by the `fromObject` method.
 * @record
 */
proto.pandora.GVoiceRoomSetting.ObjectFormat = function() {
  /** @type {?|undefined} */
  this.roomName;

  /** @type {?|undefined} */
  this.enable;
};

/**
 * Loads data from an object into a new instance of this proto.
 * @param {!proto.pandora.GVoiceRoomSetting.ObjectFormat} obj
 *     The object representation of this proto to load the data from.
 * @return {!proto.pandora.GVoiceRoomSetting}
 */
proto.pandora.GVoiceRoomSetting.fromObject = function(obj) {
  var msg = new proto.pandora.GVoiceRoomSetting();
  obj.roomName != null && jspb.Message.setField(msg, 1, obj.roomName);
  obj.enable != null && jspb.Message.setField(msg, 2, obj.enable);
  return msg;
};
}

goog.object.extend(exports, proto.pandora);
